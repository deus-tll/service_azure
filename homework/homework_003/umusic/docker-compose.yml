version: '3.8'

services:
  api.gateway:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"

  rabbit.mq:
    image: rabbitmq:3.12.0-management-alpine
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"

  notifications.router:
    container_name: notifications.router
    build: ./notifications/notification_router
    volumes:
      - ./notifications/notification_router/src:/usr/src/app
    command: sh -c " npm install && npm start "
    env_file:
      - .env

  socket.jonny:
    container_name: socket.jonny
    build: ./notifications/websocket
    volumes:
      - ./notifications/websocket/src:/usr/src/app
    command: sh -c " npm install && npm start "
    environment:
      - SERVER_NAME=SocketJonny
      - SERVER_PORT=80
    env_file:
      - .env

  redis.sockets:
    image: 'redis:alpine'
    volumes:
      - './volumes/db/redis/sockets:/data'

#  frontend.public:
#    container_name: frontend.public
#    build: ./frontend/public
#    volumes:
#      - ./frontend/public:/usr/src/app
#    stdin_open: true
#    tty: true
#    ports:
#      - "3000:3000"
#    env_file:
#      - .env

  api.auth:
    container_name: api.auth
    build: ./backend/auth
    volumes:
      - ./backend/auth/src:/usr/src/app
    command: sh -c " npm install && npm start "
    env_file:
      - .env

  storage.minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9009:9009"
    volumes:
      - ./volumes/storages/minio:/data
    command: server --console-address :9009 /data
    env_file:
      - .env

  api.minio.upload:
    container_name: api.minio.upload
    build: backend/minio
    volumes:
      - ./backend/minio/src:/usr/src/app
    command: sh -c " npm install && npm start "
    env_file:
      - .env

  api.ai.computer.vision:
    container_name: api.ai.computer.vision
    build: ./backend/ai_computer_vision
    volumes:
      - ./backend/ai_computer_vision/src:/usr/src/app
    command: sh -c " npm install && npm start "
    env_file:
      - .env



#  api.artists.sunny:
#    build: ./backend/artists
#    volumes:
#      - ./backend/artists:/usr/src/app
#    command: sh -c "npm install && npm start"
#    container_name: api.artists.sunny
#    environment:
#      - SERVER_NAME=api.artists.sunny
#
#  api.artists.jonny:
#    build: ./backend/artists
#    volumes:
#      - ./backend/artists:/usr/src/app
#    command: sh -c "npm install && npm start"
#    container_name: api.artists.jonny
#    environment:
#      - SERVER_NAME=api.artists.jonny
#
#  api.audios.sunny:
#    build: ./backend/audios
#    volumes:
#      - ./backend/audios:/usr/src/app
#    command: sh -c "npm install && npm start"
#    container_name: api.audios.sunny
#    environment:
#      - SERVER_NAME=api.audios.sunny
#
#  api.audios.jonny:
#    build: ./backend/audios
#    volumes:
#      - ./backend/audios:/usr/src/app
#    command: sh -c "npm install && npm start"
#    container_name: api.audios.jonny
#    environment:
#      - SERVER_NAME=api.audios.jonny
#
#  api.listeners.sunny:
#    build: ./backend/listeners
#    volumes:
#      - ./backend/listeners:/usr/src/app
#    command: sh -c "npm install && npm start"
#    container_name: api.listeners.sunny
#    environment:
#      - SERVER_NAME=api.listeners.sunny
#
#  api.listeners.jonny:
#    build: ./backend/listeners
#    volumes:
#      - ./backend/listeners:/usr/src/app
#    command: sh -c "npm install && npm start"
#    container_name: api.listeners.jonny
#    environment:
#      - SERVER_NAME=api.listeners.jonny
#
#  api.playlists.sunny:
#    build: ./backend/playlists
#    volumes:
#      - ./backend/playlists:/usr/src/app
#    command: sh -c "npm install && npm start"
#    container_name: api.playlists.sunny
#    environment:
#      - SERVER_NAME=api.playlists.sunny
#
#  api.playlists.jonny:
#    build: ./backend/playlists
#    volumes:
#      - ./backend/playlists:/usr/src/app
#    command: sh -c "npm install && npm start"
#    container_name: api.playlists.jonny
#    environment:
#      - SERVER_NAME=api.playlists.jonny

#  db:
#    build: ./db
#    ports:
#      - "1433:1433"
#    env_file:
#      - .env